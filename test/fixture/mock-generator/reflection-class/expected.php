<?php

/**
 * A mock class generated by Phony.
 *
 * This file is part of the Phony package.
 *
 * Copyright Â© 2014 Erin Millard
 *
 * For the full copyright and license information, please view the LICENSE file
 * that was distributed with the Phony source code.
 *
 * @link https://github.com/eloquent/phony
 */
class PhonyMock_ReflectionClass_111
extends ReflectionClass
implements Eloquent\Phony\Mock\MockInterface
{
    public static function export(
        $a0,
        $a1 = null
    ) {
    }

    /**
     * Construct a mock.
     *
     * @param array<string,Eloquent\Phony\Stub\StubInterface>|null $stubs The stubs to use.
     */
    public function __construct(
        array $stubs = null
    ) {
        if (null === $stubs) {
            $stubs = array();
        }

        $this->_stubs = $stubs;
    }

    /**
     * Call the parent constructor.
     */
    public function _constructParent()
    {
        parent::__construct();
    }

    public function __toString()
    {
    }

    public function getConstant(
        $a0
    ) {
    }

    public function getConstants()
    {
    }

    public function getConstructor()
    {
    }

    public function getDefaultProperties()
    {
    }

    public function getDocComment()
    {
    }

    public function getEndLine()
    {
    }

    public function getExtension()
    {
    }

    public function getExtensionName()
    {
    }

    public function getFileName()
    {
    }

    public function getInterfaceNames()
    {
    }

    public function getInterfaces()
    {
    }

    public function getMethod(
        $a0
    ) {
    }

    public function getMethods(
        $a0 = null
    ) {
    }

    public function getModifiers()
    {
    }

    public function getName()
    {
    }

    public function getNamespaceName()
    {
    }

    public function getParentClass()
    {
    }

    public function getProperties(
        $a0 = null
    ) {
    }

    public function getProperty(
        $a0
    ) {
    }

    public function getShortName()
    {
    }

    public function getStartLine()
    {
    }

    public function getStaticProperties()
    {
    }

    public function getStaticPropertyValue(
        $a0,
        $a1 = null
    ) {
    }

    public function getTraitAliases()
    {
    }

    public function getTraitNames()
    {
    }

    public function getTraits()
    {
    }

    public function hasConstant(
        $a0
    ) {
    }

    public function hasMethod(
        $a0
    ) {
    }

    public function hasProperty(
        $a0
    ) {
    }

    public function implementsInterface(
        $a0
    ) {
    }

    public function inNamespace()
    {
    }

    public function isAbstract()
    {
    }

    public function isCloneable()
    {
    }

    public function isFinal()
    {
    }

    public function isInstance(
        $a0
    ) {
    }

    public function isInstantiable()
    {
    }

    public function isInterface()
    {
    }

    public function isInternal()
    {
    }

    public function isIterateable()
    {
    }

    public function isSubclassOf(
        $a0
    ) {
    }

    public function isTrait()
    {
    }

    public function isUserDefined()
    {
    }

    public function newInstance(
        $a0
    ) {
    }

    public function newInstanceArgs(
        array $a0 = null
    ) {
    }

    public function newInstanceWithoutConstructor()
    {
    }

    public function setStaticPropertyValue(
        $a0,
        $a1
    ) {
    }

    private $_stubs;
}
