{
    "Can use anonymous classes":                                                    ["class.anonymous",                             "7.x",     "999",   [], "3.11.x", "999", [], "3.11.x", "999", []],
    "Can use closures":                                                             ["closure",                                     "5.3.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can bind closures":                                                            ["closure.bind",                                "5.4.x",   "999",   [], "3.4.x",  "999", [], "3.4.x",  "999", []],
    "Can use constants with array values":                                          ["constant.array",                              "5.6.x",   "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use class constants with array values":                                    ["constant.class.array",                        "5.6.x",   "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use class constants with expression values":                               ["constant.class.expression",                   "5.6.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use constants with expression values":                                     ["constant.expression",                         "5.6.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can catch error exceptions from the engine":                                   ["error.exception.engine",                      "7.x",     "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use generators":                                                           ["generator",                                   "5.5.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use generators without explicitly calling next()":                         ["generator.implicit-next",                     "5.5.x",   "999",   [], "3.11.x", "999", [], "3.11.x", "999", []],
    "Can throw an exception into a generator":                                      ["generator.exception",                         "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield":                                                                    ["generator.yield",                             "5.5.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can yield and assign the result":                                              ["generator.yield.assign",                      "7.x",     "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can yield a key and value and assign the result":                              ["generator.yield.assign.key",                  "7.x",     "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can yield no value and assign the result":                                     ["generator.yield.assign.nothing",              "5.5.x",   "999",   [], "3.4.x",  "999", [], "3.4.x",  "999", []],
    "Can yield as an expression":                                                   ["generator.yield.expression",                  "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield as an expression and assign the result":                             ["generator.yield.expression.assign",           "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield a key and value as an expression and assign the result":             ["generator.yield.expression.assign.key",       "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield no value as an expression and assign the result":                    ["generator.yield.expression.assign.nothing",   "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield a key and value as an expression":                                   ["generator.yield.expression.key",              "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield no value as an expression":                                          ["generator.yield.expression.nothing",          "5.5.x",   "999",   [], "3.10.x", "999", [], "3.10.x", "999", []],
    "Can yield a key and value":                                                    ["generator.yield.key",                         "5.5.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can yield no value":                                                           ["generator.yield.nothing",                     "5.5.x",   "999",   [], "3.4.x",  "999", [], "3.4.x",  "999", []],
    "Can return a value from a generator":                                          ["generator.return",                            "7.x",     "999",   [], "3.11.x", "999", [], "3.11.x", "999", []],
    "Can use PHP4-style constructors":                                              ["object.constructor.php4",                     "5.3.x",   "6.999", [], "0.x",    "999", [], "999",    "0.x", []],
    "Can bypass constructors":                                                      ["object.constructor.bypass",                   "5.4.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can bypass constructors of user-defined classes that extend internal classes": ["object.constructor.bypass.extended-internal", "5.6.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use a constant as a parameter default value":                              ["parameter.default.constant",                  "5.4.6.x", "999",   [], "3.13.x", "999", [], "3.13.x", "999", []],
    "Can override a method that uses self as a type hint":                          ["parameter.type.self.override",                "5.4.1.x", "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use variadic parameters":                                                  ["parameter.variadic",                          "5.6.x",   "999",   [], "3.3.x",  "999", [], "3.3.x",  "999", []],
    "Can use by-reference variadic parameters":                                     ["parameter.variadic.reference",                "5.6.x",   "999",   [], "3.17.x", "999", [], "3.17.x", "999", []],
    "Can use type hints with variadic parameters":                                  ["parameter.variadic.type",                     "5.6.x",   "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use scalar type hints":                                                    ["parameter.hint.scalar",                       "7.x",     "999",   [], "3.11.x", "999", [], "3.11.x", "999", []],
    "Language keywords can be used as method names":                                ["parser.relaxed-keywords",                     "7.x",     "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use return type declarations":                                             ["return.type",                                 "7.x",     "999",   [], "3.11.x", "999", [], "3.11.x", "999", []],
    "Reflection function exports include full array default value":                 ["reflection.function.export.default.array",    "999",     "0.x",   [], "3.2.x",  "999", [], "3.2.x",  "999", []],
    "Reflection function exports include by-reference information":                 ["reflection.function.export.reference",        "0.x",     "999",   [], "3.4.x",  "999", [], "3.4.x",  "999", []],
    "HHVM runtime":                                                                 ["runtime.hhvm",                                "999",     "0.x",   [], "0.x",    "999", [], "0.x",    "999", []],
    "PHP runtime":                                                                  ["runtime.php",                                 "0.x",     "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use ANSI escape codes with STDOUT":                                        ["stdout.ansi",                                 "0.x",     "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use traits":                                                               ["trait",                                       "5.4.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use the callable psuedo-type":                                             ["type.callable",                               "5.4.x",   "999",   [], "0.x",    "999", [], "0.x",    "999", []],
    "Can use the iterable psuedo-type":                                             ["type.iterable",                               "7.1.x",   "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use nullable types":                                                       ["type.nullable",                               "7.1.x",   "999",   [], "999",    "0.x", [], "999",    "0.x", []],
    "Can use void return type declarations":                                        ["type.void",                                   "7.1.x",   "999",   [], "999",    "0.x", [], "999",    "0.x", []]
}
