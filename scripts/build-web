#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

echo 'Generating website... ';

passthru('mkdir -p build');

if (file_exists('build/web.json')) {
    $meta = json_decode(file_get_contents('build/web.json'), true);
} else {
    $meta = [];
}

$markdownPaths = glob('doc/*.md');
$markdownHashes = array_combine(
    $markdownPaths,
    array_map('sha1_file', $markdownPaths)
);
$markdownDirty = array_combine(
    $markdownPaths,
    array_map(
        function ($markdownPath) use ($meta, $markdownHashes) {
            $lastHash = $meta[$markdownPath]['hash'] ?? null;

            return $markdownHashes[$markdownPath] !== $lastHash;
        },
        $markdownPaths
    )
);

$isDirty = array_reduce(
    $markdownDirty,
    function ($isDirty, $pathIsDirty) {
        return $isDirty || $pathIsDirty;
    },
    false
);

if (!$isDirty) {
    echo "nothing to do.\n";
    exit;
}

passthru('rm -rf web');
passthru('mkdir -p web');

$httpHeaders = "Content-type: text/plain\r\n";

if ($token = getenv('GITHUB_TOKEN')) {
    $httpHeaders .= "Authorization: token $token\r\n";
}

$header = file_get_contents('assets/web/header.tpl.html');
$footer = file_get_contents('assets/web/footer.tpl.html');

$newMeta = [];

foreach ($markdownDirty as $markdownPath => $isDirty) {
    if ($isDirty) {
        $markdownContent = file_get_contents($markdownPath);
        $content = strtr(
            file_get_contents(
                'https://api.github.com/markdown/raw',
                false,
                stream_context_create(
                    [
                        'http' => [
                            'user_agent' => 'PHP',
                            'header' => $httpHeaders,
                            'method' => 'POST',
                            'content' => $markdownContent,
                        ],
                    ]
                )
            ),
            [
                'id="user-content-' => 'id="',
                'name="user-content-' => 'name="',
            ]
        );
        $content = rtrim($content, "\n");

        $newMeta[$markdownPath] = [
            'content' => $content,
            'hash' => sha1($markdownContent),
        ];
    } else {
        $content = $meta[$markdownPath]['content'];
        $newMeta[$markdownPath] = $meta[$markdownPath];
    }

    $content = <<<EOD
$header
<!-- START content -->

$content

<!-- END content -->

$footer
EOD;

    $htmlPath = sprintf('web/%s.html', basename($markdownPath, '.md'));
    file_put_contents($htmlPath, $content);

}

passthru('cp -a assets/web/css web/');
passthru('cp -a assets/web/data web/');
passthru('cp -a assets/web/img web/');
passthru('cp -a assets/web/js web/');
passthru('cp -a doc/img web/');

file_put_contents('build/web.json', json_encode($newMeta, JSON_PRETTY_PRINT));

echo "done.\n";
