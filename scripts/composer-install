#!/usr/bin/env php
<?php

if (getenv('PHONY_MAKEFILE_INSTALL') && getenv('HHVMPHP7')) {
    echo "Skipping Composer re-installation on Travis under HHVMPHP7 mode\n";
    exit(0);
}

set_error_handler(
    function ($severity, $message, $path, $lineNumber) {
        if (
            E_DEPRECATED === $severity ||
            E_USER_DEPRECATED === $severity ||
            0 === error_reporting()
        ) {
            return true;
        }

        throw new ErrorException($message, 0, $severity, $path, $lineNumber);
    }
);

try {
    $configPath = __DIR__ . '/../composer.json';
    $found = false;

    $minorVersion = PHP_MINOR_VERSION;

    for ($i = PHP_MAJOR_VERSION; $i > 4; --$i) {
        for ($j = $minorVersion; $j >= 0; --$j) {
            $versionPath = __DIR__ . "/../composer.php$i$j.json";

            if (is_file($versionPath)) {
                $found = true;

                echo "Using Composer configuration for PHP >= $i.$j\n";
                copy($versionPath, $configPath);

                break;
            }
        }

        $minorVersion = 99;
    }

    if (!$found) {
        echo "No suitable Composer configuration found\n";
        exit(1);
    }

    $hash = md5_file($configPath);
    echo "Composer hash is $hash\n";

    $cachePath = ".composer/$hash";
    exec('mkdir -p ' . escapeshellarg($cachePath));

    $lockPath = __DIR__ . '/../composer.lock';
    $lockCachePath = $cachePath . '/' . PHP_VERSION . '.composer.lock';

    if (is_file($lockCachePath)) {
        echo 'HIT Composer lock file cache found for ' . PHP_VERSION . " @ $hash\n";
        $isCurrent = is_file($lockPath) && md5_file($lockCachePath) === md5_file($lockPath);

        if (!$isCurrent) {
            copy($lockCachePath, $lockPath);
        }
    } else {
        echo 'MISS Composer lock file cache not found for ' . PHP_VERSION . " @ $hash\n";
        $isCurrent = false;
    }

    $isInstalled = $isCurrent && is_file(__DIR__ . '/../vendor/autoload.php');

    if ($isInstalled) {
        echo "Dependencies already installed\n";
    } else {
        $composerArguments = $_SERVER['argv'];
        array_shift($composerArguments);
        array_unshift($composerArguments, 'composer', 'install');

        exec('rm -rf ' . escapeshellarg($lockPath));
        passthru(implode(' ', array_map('escapeshellarg', $composerArguments)), $exitCode);

        if (0 === $exitCode) {
            copy($lockPath, $lockCachePath);
        } else {
            exit($exitCode);
        }
    }

    $currentHashes = array();
    $latestConfigPath = '';

    foreach (scandir(__DIR__ . '/..') as $entry) {
        if ('composer.php' === substr($entry, 0, 12) && '.json' === substr($entry, -5)) {
            $entryPath = __DIR__ . '/../' . $entry;
            $currentHashes[md5_file($entryPath)] = true;

            if (!$latestConfigPath || $entryPath > $latestConfigPath) {
                $latestConfigPath = $entryPath;
            }
        }
    }

    if ($latestConfigPath) {
        copy($latestConfigPath, $configPath);
    }

    foreach (scandir('.composer') as $entry) {
        if ('.' === $entry[0]) {
            continue;
        }

        if (!isset($currentHashes[$entry])) {
            echo "Removing outdated Composer lock file cache for hash $entry\n";
            exec('rm -rf ' . escapeshellarg('.composer/' . $entry));
        }
    }

    exit;
} catch (Throwable $e) {
    echo $e;
} catch (Error $e) {
    echo $e;
}

exit(1);
